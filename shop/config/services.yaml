# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    upload_directory: '%kernel.project_dir%/var/uploads'
    microservice.ci4_url: '%env(resolve:MICROSERVICE_CI4_URL)%'
    app.pagination_limit: '%env(int:PAGINATION_LIMIT)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/**/Domain/**'
    Redis:
        class: Redis
        calls:
            - [ connect, [ 'redis', 6379 ] ]

    App\Product\Infrastructure\Persistence\Doctrine\:
        resource: '../src/Product/Infrastructure/Persistence/Doctrine/*'
        autowire: true
        autoconfigure: true

    App\Menu\Application\Service\MenuService:
        autowire: true
        tags:
            - { name: twig.global }

    App\Infrastructure\Twig\MenuExtension:
        arguments:
            $menuService: '@App\Menu\Application\Service\MenuService'
        tags:
            - { name: 'twig.extension', priority: -10 }

    App\Infrastructure\Persistence\Doctrine\User\UserRepository:
        tags: ['doctrine.repository_service']
        arguments:
            - '@doctrine' # lub '@Doctrine\Persistence\ManagerRegistry'
    Symfony\Contracts\HttpClient\HttpClientInterface: '@http_client'

    App\Dashboard\Application\UI\Http\Controller\DashboardController:
        tags: [ 'controller.service_arguments' ]


#    App\Infrastructure\User\MessageHandler\UserLoggedInEventHandler:
#        arguments:
#            $microserviceUrl: '%microservice.ci4_url%'

    App\Product\Infrastructure\Persistence\Doctrine\TypeProductRepository:
        tags: ['doctrine.repository_service']

    App\Product\Infrastructure\Persistence\Doctrine\ProductRepository:
        tags: ['doctrine.repository_service']

    App\Product\Domain\Repository\ProductTypeRepositoryInterface:
        '@App\Product\Infrastructure\Persistence\Doctrine\ProductTypeRepository'

    App\Product\Domain\Repository\ProductRepositoryInterface:
        '@App\Product\Infrastructure\Persistence\Doctrine\ProductRepository'

